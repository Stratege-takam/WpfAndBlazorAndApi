@page "/Login"
@using Brewery.Web.States
@using Brewery.Web.Helpers.ViewModels
@inject UserState UserState
@inject NavigationManager NavigationManager
@inject IStringLocalizer<Resource> localizer

<PageTitle> @localizer["HeaderLogin"]</PageTitle>

<div class="container h-80 d-flex justify-content-center align-items-center">
    <EditForm @ref="form" OnValidSubmit="UserState.SubmitLogin"
              Model="UserState.LoginRequest"
              Class="w-50">
        <DataAnnotationsValidator />
        <Card Class="p-4">
            <CardHeader Class="bg-white border-bottom-0 text-warning fw-bold h3">
                <PageTitle> @localizer["HeaderLogin"]</PageTitle>
            </CardHeader>
            <CardBody>
               @if (UserState.ErrorServer != null)
               {
                   <div class="alert alert-danger mb-3" role="alert">
                       @UserState.ErrorServer
                   </div>
               }
                <div class="mb-3">
                    <label class="form-label"> Email: </label>
                    <InputText type="email" class="form-control"
                               @bind-Value="UserState.LoginRequest.Email"></InputText>
                    <ValidationMessage For="@(() => UserState.LoginRequest.Email)"/>
                </div>
                <div class="mb-3">
                    <label  class="form-label"> Password: </label>
                    <InputText type="password" class="form-control"
                               @bind-Value="UserState.LoginRequest.Password"></InputText>
                    <ValidationMessage For="@(() => UserState.LoginRequest.Password)"/>
                </div>
                <div class="form-group mt-3 d-flex align-items-center">
                    <button type="submit"  class="btn text-white btn-warning">Soumettre</button>
                    @if (UserState.ErrorServer != null)
                    {
                       <div class="ml-4" role="alert">
                            @UserState.Loading
                       </div>
                    }
                    <div class="pr-3"> @UserState.Loading </div>
                </div>
            </CardBody> 
        </Card>
    </EditForm>
</div>

@code {
    private EditForm form;
    
    [CascadingParameter(Name = CascadingConst.CurrentUser)]
    private ApplicationUserViewModel ApplicationUserViewModel { get; set; }

    protected override Task OnParametersSetAsync()
    {
        if (ApplicationUserViewModel !=null)
        {
            NavigationManager.NavigateTo("");
        }

        return base.OnParametersSetAsync();
    }
}