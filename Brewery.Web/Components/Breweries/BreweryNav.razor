@using Brewery.Contract.Contracts.Responses.Beers

<Accordion Flush="true" AlwaysOpen="true">
    @foreach (var item  in List)
    {
        var id = item.Item1;
        var list = item.Item2;
        <AccordionItem IsActive="true" Class="bg-white text-dark">
            <TitleTemplate>
                <i class="bi bi-building me-1"></i> Accordion Item #@id
            </TitleTemplate>
            <Content>
                <div class="list-group border-0">
                    <a href="#" class="list-group-item list-group-item-action border-0">
                        <i class="bi bi-cup-straw me-1"></i> 
                        A second link item
                    </a>
                    <a href="#" class="list-group-item list-group-item-action border-0">
                        <i class="bi bi-cup-straw me-1"></i>  
                        A third link item
                    </a>
                    <a href="#" class="list-group-item list-group-item-action border-0">
                        <i class="bi bi-cup-straw me-1"></i> 
                        A fourth link item
                    </a>
                    <a href="#" class="list-group-item list-group-item-action border-0" tabindex="-1" aria-disabled="true">
                        <i class="bi bi-cup-straw me-1"></i> 
                        A disabled link item
                    </a>
                </div>
            </Content>
        </AccordionItem>
    }
</Accordion>


@code {

    public List<Tuple<string, List<CreateBeerResponse>>> List { get; set; }
    

    protected override void OnInitialized()
    {
        List = new List<Tuple<string, List<CreateBeerResponse>>>()
        {
            new Tuple<string, List<CreateBeerResponse>>("collapse1", new List<CreateBeerResponse>()),
            new Tuple<string, List<CreateBeerResponse>>("collapse2", new List<CreateBeerResponse>()),
            new Tuple<string, List<CreateBeerResponse>>("collapse3", new List<CreateBeerResponse>()),
            new Tuple<string, List<CreateBeerResponse>>("collapse4", new List<CreateBeerResponse>()),
            new Tuple<string, List<CreateBeerResponse>>("collapse5", new List<CreateBeerResponse>()),
            new Tuple<string, List<CreateBeerResponse>>("collapse6", new List<CreateBeerResponse>()),
            new Tuple<string, List<CreateBeerResponse>>("collapse7", new List<CreateBeerResponse>()),
            new Tuple<string, List<CreateBeerResponse>>("collapse8", new List<CreateBeerResponse>()),
            new Tuple<string, List<CreateBeerResponse>>("collapse9", new List<CreateBeerResponse>()),
            new Tuple<string, List<CreateBeerResponse>>("collapse10", new List<CreateBeerResponse>()),
        };
    }

}