@using Brewery.Contract.Contracts.Responses.Beers
@using Brewery.Web.Helpers.States

@if (State != null && State.Trees != null)
{
    <Accordion Flush="true" AlwaysOpen="true">
        @foreach (var item  in State.Trees)
        {
            var name = item.Name;
            var beers = item.Beers;
            <AccordionItem IsActive="true" Class="bg-white text-dark">
                <TitleTemplate>
                    <i class="bi bi-building me-1"></i> @name
                </TitleTemplate>
                <Content>
                    <div class="list-group border-0">
                        @foreach (var beer in beers)
                        {
                            <button @onclick="() => State.AddDetail(beer)"
                                    class="btn-link  text-dark list-group-item list-group-item-action border-0">
                                <i class="bi bi-cup-straw me-1"></i>
                                @beer.Name
                            </button>
                        }
                    </div>
                </Content>
            </AccordionItem>
        }
    </Accordion>
}



@code {
    
    private BreweryState _state;
    
    [Parameter]
    public BreweryState State { 
        get => _state;
        set
        {
            if (_state != value)
            {
                _state = value;
                StateChanged.InvokeAsync(value);
            }
        } 
    }
    
    [Parameter]
    public EventCallback<BreweryState> StateChanged { get; set; }

}