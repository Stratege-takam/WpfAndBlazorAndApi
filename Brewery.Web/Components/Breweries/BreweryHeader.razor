@using Brewery.Web.Helpers.ViewModels
@using Brewery.Web.Helpers.States

@if (State != null)
{
    <div   class="d-flex align-items-center justify-content-between w-000">
        <EditForm Model="State" OnSubmit="State.FillTreview" class="d-flex align-items-center">
            <DataAnnotationsValidator/>
            <div class="d-flex align-items-center me-2">
                <label class="form-label me-2">Breweries: </label>
                <MultiSelect @bind-Item="State.BrewerySearch" Items="State.Breweries"/>
            </div>

            <div class="d-flex align-items-center me-2">
                <label class="form-label me-2">Wholersalers: </label>
                <MultiSelect @bind-Item="State.WholesalerSearch" Items="State.Wholesalers"/>
            </div>
            <div class="">
                <button type="submit" class="btn btn-warning text-white">
                    <i class="bi bi-search me-1"></i>
                    Rechercher
                </button>
            </div>
        </EditForm>
    
        <div class="ml-auto d-flex align-items-center ms-2">
            <button type="button" class="btn btn-warning text-white">
                <i class="bi bi-plus me-1"></i>
                Créer une bière
            </button>
        </div>
    </div>
}


@code {
    
    private BreweryState _state;
    
    [Parameter]
    public BreweryState State { 
        get => _state;
        set
        {
            if (_state != value)
            {
                _state = value;
                StateChanged.InvokeAsync(value);
            }
        } 
    }
    
    [Parameter]
    public EventCallback<BreweryState> StateChanged { get; set; }
    
     
}

