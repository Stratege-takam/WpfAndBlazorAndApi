@using Brewery.Web.Helpers.States
@using Brewery.Web.Helpers.ViewModels
@using Elia.Core.Extensions
@inject NavigationManager NavigationManager
@if (State != null && State.Details != null)
{
    <Tabs EnableFadeEffect="true">
       @for (int i = 0; i < State.Details.Count; i++)
       {
           var index = i;
           var beer = State.Details.ElementAt(i);
           <Tab IsActive="index == 0">
               <TitleTemplate>
                   @beer.Name   
                   <button class="btn-link border-0 bg-white ms-2" @onclick="() => RemoveItem(beer)">
                       <i class="bi bi-x  text-danger"></i>
                   </button>
               </TitleTemplate>
               <Content>
                   <p class="mt-2">
                       <BeerItem BeerDetail="beer" />
                   </p>
               </Content>
           </Tab>
       }
    </Tabs>
}
else
{
    <Tabs EnableFadeEffect="true">
        <Tab>
           <TitleTemplate>
              Détail de la bière
           </TitleTemplate>
           <Content>
               <div class="mt-2">
                   <h4>Pour consulter le détail d'une bière cliquer sur un élement à votre gauche</h4>
                   Lorem ipsum dolor sit amet, consectetur adipisicing elit. A alias amet architecto asperiores exercitationem
                   in incidunt ipsam, magni minima nobis nostrum numquam, perferendis quam quasi rerum ullam vitae voluptas, voluptatum?
               </div>
           </Content>
       </Tab>
    </Tabs>
}


@code {

    private BreweryState _state;
    
    [Parameter]
    public BreweryState State { 
        get => _state;
        set
        {
            if (_state != value)
            {
                _state = value;
                StateChanged.InvokeAsync(value);
            }
        } 
    }
    
    [Parameter]
    public EventCallback<BreweryState> StateChanged { get; set; }

    public void RemoveItem(BeerDetailViewModel beerDetail)
    {
        State.RemoveDetail(beerDetail);
        StateHasChanged();//Refresh the component using updated data
      //  NavigationManager.NavigateTo(AppRoutingEnum.Brewery.GetEnumDescription(), true);
    }
    
}