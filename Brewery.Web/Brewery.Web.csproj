<Project Sdk="Microsoft.NET.Sdk.BlazorWebAssembly">

    <PropertyGroup>
        <TargetFramework>net7.0</TargetFramework>
        <Nullable>disable</Nullable>
        <ImplicitUsings>enable</ImplicitUsings>
        <DockerDefaultTargetOS>Windows</DockerDefaultTargetOS>
        <Configurations>Debug;Test;Prod</Configurations>
        <Platforms>AnyCPU</Platforms>
        <BlazorWebAssemblyLoadAllGlobalizationData>true</BlazorWebAssemblyLoadAllGlobalizationData>
    </PropertyGroup>

    <PropertyGroup Condition=" '$(Configuration)' == 'Prod' ">
      <Optimize Condition=" '$(Optimize)' == '' ">true</Optimize>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="Blazor.Bootstrap" Version="1.10.2" />
        <PackageReference Include="Microsoft.AspNetCore.Components.WebAssembly" Version="7.0.11"/>
        <PackageReference Include="Microsoft.AspNetCore.Components.WebAssembly.DevServer" Version="7.0.11" PrivateAssets="all"/>
        <PackageReference Include="Microsoft.Extensions.Configuration.Binder" Version="7.0.4" />
        <PackageReference Include="Microsoft.Extensions.Configuration.Json" Version="7.0.0" />
        <PackageReference Include="Microsoft.Extensions.DependencyInjection" Version="7.0.0" />
        <PackageReference Include="Microsoft.Extensions.Localization" Version="7.0.11" />
        <PackageReference Include="Microsoft.Extensions.Options.ConfigurationExtensions" Version="7.0.0" />
    </ItemGroup>

    <ItemGroup>
      <Content Include="..\.dockerignore">
        <Link>.dockerignore</Link>
      </Content>
      <Content Include="Extensions\WebAssemblyHostExtension.cs" />
    </ItemGroup>

    <ItemGroup>
      <ProjectReference Include="..\Brewery.Contract\Brewery.Contract.csproj" />
      <ProjectReference Include="..\Brewery.Services\Brewery.Services.csproj" />
      <ProjectReference Include="..\Elia.Core\Elia.Core.csproj" />
    </ItemGroup>



    <ItemGroup>
      <None Include="wwwroot\Appsettings\appsettings.json" />
      <None Include="wwwroot\Appsettings\appsettings.Prod.json" />
      <None Include="wwwroot\Appsettings\appsettings.Test.json" />
    </ItemGroup>


    <ItemGroup>
      <EmbeddedResource Update="Shared\Resources\Resource.resx">
        <Generator>ResXFileCodeGenerator</Generator>
        <LastGenOutput>Resource.Designer.cs</LastGenOutput>
      </EmbeddedResource>
    </ItemGroup>


    <ItemGroup>
      <Compile Update="Shared\Resources\Resource.Designer.cs">
        <DesignTime>True</DesignTime>
        <AutoGen>True</AutoGen>
        <DependentUpon>Resource.resx</DependentUpon>
      </Compile>
    </ItemGroup>


    <ItemGroup>
      <_ContentIncludedByDefault Remove="wwwroot\css\open-iconic\FONT-LICENSE" />
      <_ContentIncludedByDefault Remove="wwwroot\css\open-iconic\font\css\open-iconic-bootstrap.min.css" />
      <_ContentIncludedByDefault Remove="wwwroot\css\open-iconic\font\fonts\open-iconic.eot" />
      <_ContentIncludedByDefault Remove="wwwroot\css\open-iconic\font\fonts\open-iconic.otf" />
      <_ContentIncludedByDefault Remove="wwwroot\css\open-iconic\font\fonts\open-iconic.svg" />
      <_ContentIncludedByDefault Remove="wwwroot\css\open-iconic\font\fonts\open-iconic.ttf" />
      <_ContentIncludedByDefault Remove="wwwroot\css\open-iconic\font\fonts\open-iconic.woff" />
      <_ContentIncludedByDefault Remove="wwwroot\css\open-iconic\ICON-LICENSE" />
      <_ContentIncludedByDefault Remove="wwwroot\css\open-iconic\README.md" />
    </ItemGroup>



</Project>
